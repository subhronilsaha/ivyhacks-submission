{"ast":null,"code":"var _jsxFileName = \"/Users/subhronilsaha/Desktop/ivyhacks-submission/tree-fam/src/components/Map.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\ndefaultProps = {\n  zoom: 14,\n  initialCenter: {\n    lat: -1.2884,\n    lng: 36.8233\n  },\n  centerAroundCurrentLocation: false,\n  visible: true\n};\nexport class CurrentLocation extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      lat,\n      lng\n    } = this.props.initialCenter;\n    this.state = {\n      currentLocation: {\n        lat: lat,\n        lng: lng\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.google !== this.props.google) {\n      this.loadMap();\n    }\n\n    if (prevState.currentLocation !== this.state.currentLocation) {\n      this.recenterMap();\n    }\n  }\n\n  recenterMap() {\n    const map = this.map;\n    const current = this.state.currentLocation;\n    const google = this.props.google;\n    const maps = google.maps;\n\n    if (map) {\n      let center = new maps.LatLng(current.lat, current.lng);\n      map.panTo(center);\n    }\n  }\n\n  componentDidMount() {\n    if (this.props.centerAroundCurrentLocation) {\n      if (navigator && navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(pos => {\n          const coords = pos.coords;\n          this.setState({\n            currentLocation: {\n              lat: coords.latitude,\n              lng: coords.longitude\n            }\n          });\n        });\n      }\n    }\n\n    this.loadMap();\n  }\n\n  loadMap() {\n    if (this.props && this.props.google) {\n      // checks if google is available\n      const {\n        google\n      } = this.props;\n      const maps = google.maps;\n      const mapRef = this.refs.map; // reference to the actual DOM element\n\n      const node = ReactDOM.findDOMNode(mapRef);\n      let {\n        zoom\n      } = this.props;\n      const {\n        lat,\n        lng\n      } = this.state.currentLocation;\n      const center = new maps.LatLng(lat, lng);\n      const mapConfig = Object.assign({}, {\n        center: center,\n        zoom: zoom\n      }); // maps.Map() is constructor that instantiates the map\n\n      this.map = new maps.Map(node, mapConfig);\n    }\n  } // Render markers\n\n\n  renderChildren() {\n    const {\n      children\n    } = this.props;\n    if (!children) return;\n    return React.Children.map(children, c => {\n      if (!c) return;\n      return React.cloneElement(c, {\n        map: this.map,\n        google: this.props.google,\n        mapCenter: this.state.currentLocation\n      });\n    });\n  } // Render method\n\n\n  render() {\n    const style = Object.assign({}, mapStyles.map);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: style,\n      ref: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"Loading map...\"), this.renderChildren());\n  }\n\n}\nexport default CurrentLocation;","map":{"version":3,"sources":["/Users/subhronilsaha/Desktop/ivyhacks-submission/tree-fam/src/components/Map.js"],"names":["React","ReactDOM","mapStyles","map","position","width","height","defaultProps","zoom","initialCenter","lat","lng","centerAroundCurrentLocation","visible","CurrentLocation","Component","constructor","props","state","currentLocation","componentDidUpdate","prevProps","prevState","google","loadMap","recenterMap","current","maps","center","LatLng","panTo","componentDidMount","navigator","geolocation","getCurrentPosition","pos","coords","setState","latitude","longitude","mapRef","refs","node","findDOMNode","mapConfig","Object","assign","Map","renderChildren","children","Children","c","cloneElement","mapCenter","render","style"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nconst mapStyles = {\n  map: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%'\n  }\n};\n\ndefaultProps = {\n    zoom: 14,\n    initialCenter: {\n      lat: -1.2884,\n      lng: 36.8233\n    },\n    centerAroundCurrentLocation: false,\n    visible: true\n};\n\nexport class CurrentLocation extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        const { lat, lng } = this.props.initialCenter;\n\n        this.state = {\n            currentLocation: {\n                lat: lat,\n                lng: lng\n            }\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.google !== this.props.google) {\n        this.loadMap();\n        }\n        if (prevState.currentLocation !== this.state.currentLocation) {\n        this.recenterMap();\n        }\n    }\n\n    recenterMap() {\n        const map = this.map;\n        const current = this.state.currentLocation;\n        const google = this.props.google;\n        const maps = google.maps;\n\n        if (map) {\n        let center = new maps.LatLng(current.lat, current.lng);\n        map.panTo(center);\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.centerAroundCurrentLocation) {\n        if (navigator && navigator.geolocation) {\n            navigator.geolocation.getCurrentPosition(pos => {\n            const coords = pos.coords;\n            this.setState({\n                currentLocation: {\n                lat: coords.latitude,\n                lng: coords.longitude\n                }\n            });\n            });\n        }\n        }\n        this.loadMap();\n    }\n\n    loadMap() {\n        if (this.props && this.props.google) {\n        // checks if google is available\n        const { google } = this.props;\n        const maps = google.maps;\n\n        const mapRef = this.refs.map;\n\n        // reference to the actual DOM element\n        const node = ReactDOM.findDOMNode(mapRef);\n\n        let { zoom } = this.props;\n        const { lat, lng } = this.state.currentLocation;\n        const center = new maps.LatLng(lat, lng);\n\n        const mapConfig = Object.assign(\n            {},\n            {\n            center: center,\n            zoom: zoom\n            }\n        );\n\n        // maps.Map() is constructor that instantiates the map\n        this.map = new maps.Map(node, mapConfig);\n        }\n    }\n\n        // Render markers\n    renderChildren() {\n        const { children } = this.props;\n\n        if (!children) return;\n\n        return React.Children.map(children, c => {\n            if (!c) return;\n\n            return React.cloneElement(c, {\n                map: this.map,\n                google: this.props.google,\n                mapCenter: this.state.currentLocation\n            });\n        });\n    }\n\n    // Render method\n    render() {\n        const style = Object.assign({}, mapStyles.map);\n\n        return (\n        <div>\n            <div style={style} ref=\"map\">\n            Loading map...\n            </div>\n            {this.renderChildren()}\n        </div>\n        );\n    }\n\n\n}\n\nexport default CurrentLocation;"]},"metadata":{},"sourceType":"module"}